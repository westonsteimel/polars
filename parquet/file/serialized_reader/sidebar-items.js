initSidebarItems({"struct":[["FileSource","Struct that represents a slice of a file data with independent start position and length. Internally clones provided file handle, wraps with a custom implementation of BufReader that resets position before any read."],["SerializedFileReader","A serialized implementation for Parquet [`FileReader`]."],["SerializedPageReader","A serialized implementation for Parquet [`PageReader`]."],["SerializedRowGroupReader","A serialized implementation for Parquet [`RowGroupReader`]."],["SliceableCursor","This is object to use if your file is already in memory. The sliceable cursor is similar to std::io::Cursor, except that it makes it easy to create \"cursor slices\". To achieve this, it uses Arc instead of shared references. Indeed reference fields are painful because the lack of Generic Associated Type implies that you would require complex lifetime propagation when returning such a cursor."]]});